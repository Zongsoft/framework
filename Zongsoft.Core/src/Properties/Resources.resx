<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Disabled" xml:space="preserve">
    <value>禁用</value>
  </data>
  <data name="Error.FailedBinding" xml:space="preserve">
    <value>无法将“ {0}”处的配置值转换为“ {1}”类型。</value>
  </data>
  <data name="Error.FailedToActivate" xml:space="preserve">
    <value>无法创建类型为“ {0}”的实例。</value>
  </data>
  <data name="Error.IllegalConfigurationAttributeName" xml:space="preserve">
    <value>非法的配置属性名“{0}”。位于：{1}</value>
  </data>
  <data name="Error.IllegalConfigurationKeyValue" xml:space="preserve">
    <value>非法的配置元素的键值“{0}”，键值中不能含有“/”、“\”、“:”、“*”、“?”等字符。位于：{1}</value>
  </data>
  <data name="Error.IllegalRootNodeName" xml:space="preserve">
    <value>发现“{0}”是非法的根节点名称。{1}</value>
  </data>
  <data name="Error.InvalidOptionConfigurationFileFormat" xml:space="preserve">
    <value>无效的选项配置文件格式，配置元素必须位于&lt;option&gt;元素内。位于：{0}</value>
  </data>
  <data name="Error.InvalidUnrecognizedProperty" xml:space="preserve">
    <value>指定的“{0}”是一个无效的未识别属性，未识别属性类型必须是一个键为字符串类型的字典。</value>
  </data>
  <data name="Error.KeyIsDuplicated" xml:space="preserve">
    <value>发现重复的“{0}”键。位于：{1}</value>
  </data>
  <data name="Error.NamespaceIsNotSupported" xml:space="preserve">
    <value>不支持XML名称空间。位于：{0}</value>
  </data>
  <data name="Error.PropertyCannotRead" xml:space="preserve">
    <value>位于“{0}”类型的“{1}”属性不可读。</value>
  </data>
  <data name="Error.PropertyNotExists" xml:space="preserve">
    <value>在“{0}”类型中不存在名为“{1}”的属性。</value>
  </data>
  <data name="Error.RepeatedOperation" xml:space="preserve">
    <value>不能重复操作。</value>
  </data>
  <data name="Error.UnsupportedMultidimensionalArray" xml:space="preserve">
    <value>无法创建类型为“ {0}”的实例，因为不支持多维数组。</value>
  </data>
  <data name="Error.UnsupportedNodeType" xml:space="preserve">
    <value>发现不受支持的节点类型“{0}”。{1}</value>
  </data>
  <data name="OperationException.Argument.Message" xml:space="preserve">
    <value>参数异常，可能传入了不支持的参数值。</value>
  </data>
  <data name="OperationException.Unfound.Message" xml:space="preserve">
    <value>未能找到目标，导致操作异常。</value>
  </data>
  <data name="OperationException.Unknown.Message" xml:space="preserve">
    <value>发生未知的操作异常。</value>
  </data>
  <data name="OperationException.Unprocessed.Message" xml:space="preserve">
    <value>无法处理当前操作。</value>
  </data>
  <data name="OperationException.Unsatisfied.Message" xml:space="preserve">
    <value>未能满足必要的先决条件，导致操作失败。</value>
  </data>
  <data name="OperationException.Unsupported.Message" xml:space="preserve">
    <value>不支持当前操作。</value>
  </data>
  <data name="AuthenticationException.Message" xml:space="preserve">
    <value>身份验证失败。</value>
  </data>
  <data name="Security.AccountDisabled.Message" xml:space="preserve">
    <value>帐户已被禁用。</value>
  </data>
  <data name="Security.AccountSuspended.Message" xml:space="preserve">
    <value>帐户被暂停，可能是因为验证失败次数太多。</value>
  </data>
  <data name="Security.AccountUnapproved.Message" xml:space="preserve">
    <value>帐户尚未通过审核批准。</value>
  </data>
  <data name="Security.Forbidden.Message" xml:space="preserve">
    <value>禁止访问，您的账号没有被授权访问当前资源。</value>
  </data>
  <data name="Security.InvalidIdentity.Message" xml:space="preserve">
    <value>无效的身份标识。</value>
  </data>
  <data name="Security.InvalidPassword.Message" xml:space="preserve">
    <value>无效的密码。</value>
  </data>
  <data name="Security.Succeed.Message" xml:space="preserve">
    <value>验证成功。</value>
  </data>
  <data name="Security.Unknown.Message" xml:space="preserve">
    <value>其他未知的安全原因。</value>
  </data>
  <data name="AuthorizationException.Message" xml:space="preserve">
    <value>禁止访问，您没有访问这项资源的授权。</value>
  </data>
  <data name="ClearCommand.Description" xml:space="preserve">
    <value>清除当前终端的显示内容。</value>
  </data>
  <data name="ClearCommand.Name" xml:space="preserve">
    <value>清除命令</value>
  </data>
  <data name="Command.ExecutionFailed.Message" xml:space="preserve">
    <value>{0} 执行失败。</value>
  </data>
  <data name="Command.ExecutionSucceed.Message" xml:space="preserve">
    <value>{0} 执行成功。</value>
  </data>
  <data name="Command.Options.Timeout" xml:space="preserve">
    <value>超时</value>
  </data>
  <data name="CommandError.Label" xml:space="preserve">
    <value>命令出错：</value>
  </data>
  <data name="CommandNotFound.Message" xml:space="preserve">
    <value>指定的 '{0}' 命令没有找到。</value>
  </data>
  <data name="CredentialException.Message" xml:space="preserve">
    <value>凭证错误：指定的凭证是无效的或已经过期。</value>
  </data>
  <data name="DataArgumentException.Message" xml:space="preserve">
    <value>无效的数据参数或者内容值。</value>
  </data>
  <data name="DataConflictException.Message" xml:space="preserve">
    <value>数据冲突：数据项中 {0} 的 {1} 值重复了。</value>
  </data>
  <data name="DataConstraintException.Message" xml:space="preserve">
    <value>数据约束失败。</value>
  </data>
  <data name="ExitCommand.Confirm" xml:space="preserve">
    <value>您确认是否要退出(输入Yes则退出)？</value>
  </data>
  <data name="ExitCommand.Description" xml:space="preserve">
    <value>退出当前应用程序。</value>
  </data>
  <data name="ExitCommand.Name" xml:space="preserve">
    <value>退出命令</value>
  </data>
  <data name="ExitCommand.Options.Confirm" xml:space="preserve">
    <value>直接退出，不提示确认信息。</value>
  </data>
  <data name="InvalidCommandOption" xml:space="preserve">
    <value>指定的 '{0}' 是一个无效的命令选项。</value>
  </data>
  <data name="InvalidCommandOptionValue" xml:space="preserve">
    <value>指定的 '{1}' 是一个无效的 '{0}' 命令选项值。</value>
  </data>
  <data name="LinePositionInfo" xml:space="preserve">
    <value>第 {0} 行，第 {1} 列。</value>
  </data>
  <data name="MessageQueueListener.Description" xml:space="preserve">
    <value>这是一个侦听消息队列的后台服务程序，它以堵塞方式不断轮询消息队列(即循环以堵塞式调用消息队列的出队方法)，一旦队列中有消息可用则立即将消息出队，然后交给侦听器中的执行器去执行。</value>
  </data>
  <data name="MessageQueueListener.Title" xml:space="preserve">
    <value>消息队列侦听器</value>
  </data>
  <data name="MissingCommandOption" xml:space="preserve">
    <value>缺少 '{0}' 命令选项，必须为该选项提供值。</value>
  </data>
  <data name="SecretGenerateTooFrequently.Message" xml:space="preserve">
    <value>验证码生成操作调用太频繁，请等待一会后再来。</value>
  </data>
  <data name="ShellCommand.Description" xml:space="preserve">
    <value>通过系统Shell来执行外部命令。</value>
  </data>
  <data name="ShellCommand.Name" xml:space="preserve">
    <value>外部命令执行器</value>
  </data>
  <data name="ShellCommand.Options.Timeout" xml:space="preserve">
    <value>运行外部命令的超时，单位：毫秒。</value>
  </data>
  <data name="WorkerListenCommand.Prompt" xml:space="preserve">
    <value>提示：按 Ctrl+C 组合键可以退出侦听模式。</value>
  </data>
  <data name="WorkerListenCommand.Welcome" xml:space="preserve">
    <value>欢迎进入 {0} 的侦听模式。</value>
  </data>
  <data name="WorkerPauseCommand.Name" xml:space="preserve">
    <value>暂停</value>
  </data>
  <data name="WorkerResumeCommand.Name" xml:space="preserve">
    <value>恢复</value>
  </data>
  <data name="WorkerStartCommand.Name" xml:space="preserve">
    <value>启动</value>
  </data>
  <data name="WorkerStartCommand.Options.Force" xml:space="preserve">
    <value>强制启动，即使命令被禁用也尝试启动。</value>
  </data>
  <data name="WorkerState.Paused" xml:space="preserve">
    <value>已暂停</value>
  </data>
  <data name="WorkerState.Pausing" xml:space="preserve">
    <value>暂停中</value>
  </data>
  <data name="WorkerState.Resuming" xml:space="preserve">
    <value>恢复中</value>
  </data>
  <data name="WorkerState.Running" xml:space="preserve">
    <value>运行中</value>
  </data>
  <data name="WorkerState.Starting" xml:space="preserve">
    <value>启动中</value>
  </data>
  <data name="WorkerState.Stopped" xml:space="preserve">
    <value>已停止</value>
  </data>
  <data name="WorkerState.Stopping" xml:space="preserve">
    <value>停止中</value>
  </data>
  <data name="WorkerStopCommand.Name" xml:space="preserve">
    <value>停止</value>
  </data>
  <data name="ConnectionSettings.Group" xml:space="preserve">
    <value>组别标识</value>
  </data>
  <data name="ConnectionSettings.Group.Description" xml:space="preserve">
    <value>通常表示服务或连接程序所属组别。</value>
  </data>
  <data name="ConnectionSettings.Client" xml:space="preserve">
    <value>客户端名</value>
  </data>
  <data name="ConnectionSettings.Client.Description" xml:space="preserve">
    <value>表示连接程序的客户端名称。</value>
  </data>
  <data name="ConnectionSettings.Server" xml:space="preserve">
    <value>服务器地址</value>
  </data>
  <data name="ConnectionSettings.Server.Description" xml:space="preserve">
    <value>表示连接的服务器地址。对于多个目标服务器地址，通常采用分号(;)分隔。</value>
  </data>
  <data name="ConnectionSettings.Port" xml:space="preserve">
    <value>端口号</value>
  </data>
  <data name="ConnectionSettings.Port.Description" xml:space="preserve">
    <value>表示连接的服务器端口号。</value>
  </data>
  <data name="ConnectionSettings.Timeout" xml:space="preserve">
    <value>超时</value>
  </data>
  <data name="ConnectionSettings.Timeout.Description" xml:space="preserve">
    <value>表示连接超时或相关操作的超时。</value>
  </data>
  <data name="ConnectionSettings.Charset" xml:space="preserve">
    <value>字符集</value>
  </data>
  <data name="ConnectionSettings.Charset.Description" xml:space="preserve">
    <value>表示字符集的名称，譬如：UTF-8、GBK 等。</value>
  </data>
  <data name="ConnectionSettings.Encoding" xml:space="preserve">
    <value>编码方案</value>
  </data>
  <data name="ConnectionSettings.Encoding.Description" xml:space="preserve">
    <value>表示文本编码方案。</value>
  </data>
  <data name="ConnectionSettings.Provider" xml:space="preserve">
    <value>提供程序</value>
  </data>
  <data name="ConnectionSettings.Provider.Description" xml:space="preserve">
    <value>表示连接提供程序标识。</value>
  </data>
  <data name="ConnectionSettings.Database" xml:space="preserve">
    <value>数据库</value>
  </data>
  <data name="ConnectionSettings.Database.Description" xml:space="preserve">
    <value>表示连接的数据名或标识。</value>
  </data>
  <data name="ConnectionSettings.UserName" xml:space="preserve">
    <value>用户名</value>
  </data>
  <data name="ConnectionSettings.UserName.Description" xml:space="preserve">
    <value>表示连接的用户名称。</value>
  </data>
  <data name="ConnectionSettings.Password" xml:space="preserve">
    <value>密码</value>
  </data>
  <data name="ConnectionSettings.Password.Description" xml:space="preserve">
    <value>表示连接的用户密码。</value>
  </data>
  <data name="ConnectionSettings.Instance" xml:space="preserve">
    <value>实例名称</value>
  </data>
  <data name="ConnectionSettings.Instance.Description" xml:space="preserve">
    <value>表示连接的实例标识。</value>
  </data>
  <data name="ConnectionSettings.Application" xml:space="preserve">
    <value>应用名称</value>
  </data>
  <data name="ConnectionSettings.Application.Description" xml:space="preserve">
    <value>表示连接的应用标识。</value>
  </data>
</root>