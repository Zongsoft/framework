//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zongsoft.Externals.Opc.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Zongsoft.Externals.Opc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性，对
        ///   使用此强类型资源类的所有资源查找执行重写。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 Certificate File 的本地化字符串。
        /// </summary>
        internal static string Opc_Settings_Certificate {
            get {
                return ResourceManager.GetString("Opc.Settings.Certificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Certificate Secret 的本地化字符串。
        /// </summary>
        internal static string Opc_Settings_CertificateSecret {
            get {
                return ResourceManager.GetString("Opc.Settings.CertificateSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Client 的本地化字符串。
        /// </summary>
        internal static string Opc_Settings_Client {
            get {
                return ResourceManager.GetString("Opc.Settings.Client", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Heartbeat 的本地化字符串。
        /// </summary>
        internal static string Opc_Settings_Heartbeat {
            get {
                return ResourceManager.GetString("Opc.Settings.Heartbeat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Heartbeat interval for maintaining network connection. The default value is 10 seconds. 的本地化字符串。
        /// </summary>
        internal static string Opc_Settings_Heartbeat_Description {
            get {
                return ResourceManager.GetString("Opc.Settings.Heartbeat.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Instance 的本地化字符串。
        /// </summary>
        internal static string Opc_Settings_Instance {
            get {
                return ResourceManager.GetString("Opc.Settings.Instance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Locales 的本地化字符串。
        /// </summary>
        internal static string Opc_Settings_Locales {
            get {
                return ResourceManager.GetString("Opc.Settings.Locales", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Password 的本地化字符串。
        /// </summary>
        internal static string Opc_Settings_Password {
            get {
                return ResourceManager.GetString("Opc.Settings.Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Security Mode 的本地化字符串。
        /// </summary>
        internal static string Opc_Settings_SecurityMode {
            get {
                return ResourceManager.GetString("Opc.Settings.SecurityMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Indicates the secure communication method. The default is unsecured plaintext mode. Supported methods include:
        ///None: Plaintext mode.
        ///Sign: Message signature.
        ///SignAndEncrypt: Message signature and encryption.
        ///     的本地化字符串。
        /// </summary>
        internal static string Opc_Settings_SecurityMode_Description {
            get {
                return ResourceManager.GetString("Opc.Settings.SecurityMode.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Security Policy 的本地化字符串。
        /// </summary>
        internal static string Opc_Settings_SecurityPolicy {
            get {
                return ResourceManager.GetString("Opc.Settings.SecurityPolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Indicates the security policy for communication. When security mode is enabled, this option can be used to set message signing and encryption policies. Commonly used policies include:
        ///Basic128Rsa15
        ///Basic256
        ///Basic256Sha256
        ///Aes128Sha256RsaOaep
        ///Aes256Sha256RsaPss 的本地化字符串。
        /// </summary>
        internal static string Opc_Settings_SecurityPolicy_Description {
            get {
                return ResourceManager.GetString("Opc.Settings.SecurityPolicy.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Server 的本地化字符串。
        /// </summary>
        internal static string Opc_Settings_Server {
            get {
                return ResourceManager.GetString("Opc.Settings.Server", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Timeout 的本地化字符串。
        /// </summary>
        internal static string Opc_Settings_Timeout {
            get {
                return ResourceManager.GetString("Opc.Settings.Timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 UserName 的本地化字符串。
        /// </summary>
        internal static string Opc_Settings_UserName {
            get {
                return ResourceManager.GetString("Opc.Settings.UserName", resourceCulture);
            }
        }
    }
}
